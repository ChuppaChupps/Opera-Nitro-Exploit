import requests
import time
# variable
url = "https://api.discord.gx.games/v1/direct-fulfillment"
data = {"partnerUserId": ""}
partner_user_id = "b49bbac74258560812c9479f60364e5423e0853dd9509aed1665260fd475123a"
headers = {
    "authority": "api.discord.gx.games",
    "accept": "*/*",
    "accept-language": "fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7",
    "content-type": "application/json",
    "origin": "https://www.opera.com",
    "referer": "https://www.opera.com/",
    "sec-ch-ua": '"Not_A Brand";v="8", "Chromium";v="120", "Opera GX";v="106"',
    "sec-ch-ua-mobile": "?0",
    "sec-ch-ua-platform": '"Windows"',
    "sec-fetch-dest": "empty",
    "sec-fetch-mode": "cors",
    "sec-fetch-site": "cross-site",
    "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 OPR/106.0.0.0",
}
tok_response = None

# variable
discord_partner_link = "https://discord.com/billing/partner-promotions/1180231712274387115/"

filename = 'promos/promos.txt' # text file to keep promos code

def main():
    # ASCII Art
    print(r"""
________                                _______  .__  __                  ___________              .__         .__  __   
\_____  \ ______   ________________     \      \ |__|/  |________  ____   \_   _____/__  _________ |  |   ____ |__|/  |_ 
 /   |   \\____ \_/ __ \_  __ \__  \    /   |   \|  \   __\_  __ \/  _ \   |    __)_\  \/  /\____ \|  |  /  _ \|  \   __\
/    |    \  |_> >  ___/|  | \// __ \_ /    |    \  ||  |  |  | \(  <_> )  |        \>    < |  |_> >  |_(  <_> )  ||  |  
\_______  /   __/ \___  >__|  (____  / \____|__  /__||__|  |__|   \____/  /_______  /__/\_ \|   __/|____/\____/|__||__|  
        \/|__|        \/           \/          \/                                 \/      \/|__|                         
    """)

    # Choice prompt
    choice = input(f"Press 1: to generate an infinite amount of code.\nPress 2: to generate a specific amount.\nPress 3: to generete one code. \nPress escape to quit.\nEnter your input: ")

    if choice == '1':
        initilize_file()
        while True:
            operation()
    elif choice == '2':
        initilize_file()
        amount_str = input(f"Type your specific amount: ")
        amount = int(amount_str)
        for i in range(amount):
            operation()
        print("\nEnd")
        time.sleep(5)
        stop_script()
    elif choice == '3':
        initilize_file()
        operation()
        print("\nEnd")
        time.sleep(5)
        stop_script()
    elif choice == 'escape':
        print("stop")
        stop_script()

def stop_script():
    exit()

def operation():
    link = compile()
    short_link = shorten_link()
    print(f"(+) PUID: {partner_user_id}\n(+) URL: {short_link}")
    write_file(link)

def write_file(link):
    with open(filename, 'a') as file:
        file.write(link + '\n')

def initilize_file():
    ascii_art = r"""
________                                _______  .__  __                  ___________              .__         .__  __   
\_____  \ ______   ________________     \      \ |__|/  |________  ____   \_   _____/__  _________ |  |   ____ |__|/  |_ 
 /   |   \\____ \_/ __ \_  __ \__  \    /   |   \|  \   __\_  __ \/  _ \   |    __)_\  \/  /\____ \|  |  /  _ \|  \   __\
/    |    \  |_> >  ___/|  | \// __ \_ /    |    \  ||  |  |  | \(  <_> )  |        \>    < |  |_> >  |_(  <_> )  ||  |  
\_______  /   __/ \___  >__|  (____  / \____|__  /__||__|  |__|   \____/  /_______  /__/\_ \|   __/|____/\____/|__||__|  
        \/|__|        \/           \/          \/                                 \/      \/|__|                         
"""
    with open(filename, 'w') as file:
        file.write(ascii_art + '\n')

def compile():
    token = generator()
    if token:
        token_link = f"{discord_partner_link}{token}"
    return token_link

def shorten_link(max_length=128):
    link = compile()
    if len(link) > max_length:
        shortened_link = link[:max_length]+"..."
        return shortened_link
    else:
        return link

def generator():
    check_url = f"{url}?partnerUserId={partner_user_id}"
    response = requests.get(check_url)

    if response.status_code == 200:
        print(f"Error: {response.status_code} - {response.text}")
    else:
        data["partnerUserId"] = partner_user_id
        tok_response = requests.post(url, headers=headers, json=data)

        if tok_response.status_code == 200:
            if "token_already_used" in tok_response.json():
                print(f"Error: {tok_response.status_code} - {tok_response.text}")
            else:
                return tok_response.json().get("token")
        else:
            print(f"Erreur lors de la génération du token : {tok_response.text}")

if __name__ == "__main__":
    main()